/**
 * Created by frank on 6/17/15.
 */
/*global Ext: false, BS350: false, TR: false, window: false */
/*
TR('tiwlan0 ip address not retrievable')
*/
Ext.define('BS350.controller.DiagnosisNetworkFindClientsCtrl', {
  extend: 'BS350.custom.ViewController',
  views: ['DiagnosisNetworkFindClientsView'],
  items: [
    { name: 'btnStart', query: '#btnStart', actions: { click: 'find_clientStart'}},
    { name: 'btnStop', query: '#btnStop', actions: { click: 'find_clientStop'}},
    /*{ name: 'btnClear', query: '#btnClear', actions: { click: 'clearOutput'}},*/
    { name: 'find_client_target', query: '#find_client_target' },
    { name: 'find_client_network', query: '#find_client_network' },
    { name: 'find_client_start', query: '#find_client_start' },
    { name: 'find_client_stop', query: '#find_client_stop', actions: { click: 'find_clientStop'}},
    { name: 'find_client_result', query: '#find_client_result' },
    { name: 'find_clients_led', query: '#find_clients_led' },
    { name: 'findClientsForm', query: '#findClientsForm' },
    { name: 'result_panel', query: '#result_panel' },
    { name: 'msg_lbl_bbar', query: '#msg_lbl_bbar'}
  ],
  init: function (application) {
    application.getController('HeaderCtrl').on('updatestatus', this.set_find_client_result, this);
  },
  initView: function () {
    var me = this;
    me.V.btnStart.setDisabled(false);
    me.V.btnStop.setDisabled(false);
    Ext.Ajax.request({
      url: 'BS350/network/gettiwlan0firstthreebytes',
      success: function (response) {
        var json = Ext.JSON.decode(response.responseText);
        if (json.success === true) {
          me.V.find_client_network.setValue(json.msg);
        }
        me.V.find_client_network.validate();
      }
    });
  },
  set_find_client_result: function (status) {
    var me = this;
    try {
      var client_list = status.client_list.replace(new RegExp("\n", "g"), "<br/>");
      this.V.find_client_result.setText(client_list, false);
      if (status.status_find_clients === true) {
        me.V.result_panel.scrollBy(0, 10000, true);
      }
    } catch (e) {
      // pass, we just can't show anything.
    }
    if (this.V.find_clients_led !== undefined) {
      try {
        if (status.status_find_clients === true) {
          this.V.find_clients_led.setSrc(BS350.custom.Utils.addMediaVersion('BS350/static/images/24px/led_red.png'));
          me.V.btnStart.setDisabled(true);
          me.V.btnStop.setDisabled(false);
          me.V.findClientsForm.setTitle(TR('Find clients active'));
        } else {
          this.V.find_clients_led.setSrc(BS350.custom.Utils.addMediaVersion('BS350/static/images/24px/led_green.png'));
          me.V.btnStart.setDisabled(false);
          me.V.btnStop.setDisabled(true);
          me.V.findClientsForm.setTitle(TR('Find clients inactive'));
        }
      } catch (e) {
        // pass, we just can't show the status.
        this.V.find_clients_led.setSrc(BS350.custom.Utils.addMediaVersion('BS350/static/images/24px/led_green.png'));
        me.V.btnStart.setDisabled(true);
        me.V.btnStop.setDisabled(true);
      }
    }
  },
  /*clearOutput: function () {
    me.V.ping_result.setText("");
  },*/
  find_clientStart: function () {
    var me = APP.getController("DiagnosisNetworkFindClientsCtrl");
    me.V.msg_lbl_bbar.setText("");
    me.stopPing = false;
    me.V.btnStart.setDisabled(false);
    me.V.btnStop.setDisabled(false);
    Ext.Ajax.request({
      url: "BS350/network/find_clients",
      params: {
        network: me.V.find_client_network.getValue(),
        start: me.V.find_client_start.getValue(),
        stop: me.V.find_client_stop.getValue()
      },
      method: "GET",
      timeout: 1750,
      success: function (response) {
        var json = Ext.JSON.decode(response.responseText);
        if (json['success'] === false) {
          Ext.MessageBox.alert(TR("Failure"), json['msg']);
        }
      }
    });
  },
  find_clientStop: function () {
    var me = this;
    me.stopPing = true;
        Ext.Ajax.request({
          url: "BS350/network/stop_find_clients",
          success: function (response) {},
          failure: function (response) {}
        });
    me.V.btnStop.setDisabled(false);
  }
});
