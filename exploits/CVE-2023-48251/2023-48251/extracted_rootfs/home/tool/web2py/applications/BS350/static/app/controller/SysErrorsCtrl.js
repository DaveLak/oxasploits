/*global Ext: false */
Ext.define('BS350.controller.SysErrorsCtrl', {
  extend: 'BS350.custom.ViewController',

  views: ['SysErrorsView'],
  stores: ['SysErrorsStore', 'SysErrorsStatisticStore'],

  items: [
    {name: 'sysErrorsGrid', query: '#SysErrorsGrid'},
    {name: 'sysErrorsStatisticGrid', query: '#SysErrorsStatisticGrid'},
    {name: 'btnUpdate', query: '#btnUpdate', actions: {click: 'updateData'}},
    {name: 'btnDelete', query: '#btnDelete', actions: {click: 'deleteErrors'}},
    {name: 'btnAck', query: '#btnAck', actions: {click: 'acknowledgeErrors'}},
    {name: 'btnStaUpdate', query: '#btnStaUpdate', actions: {click: 'updateData'}},
    {name: 'btnStaDelete', query: '#btnStaDelete', actions: {click: 'deleteErrors'}},
    {name: 'btnStaAck', query: '#btnStaAck', actions: {click: 'acknowledgeErrors'}}
  ],

  initView: function () {
    this.updateData();
    if (this.access !== 'w') {
      this.V.btnDelete.hide();
      this.V.btnAck.hide();
      this.V.btnStaDelete.hide();
      this.V.btnStaAck.hide();
    }
  },

  countNotAckErrors: function (me) {
    Ext.Ajax.request({
      url: '/BS350/diagnosis/countNotAckErrors',
      success: function (res) {
        if (res.responseText > 0) {
          me.V.btnDelete.setDisabled(true);
          me.V.btnStaDelete.setDisabled(true);
        } else {
          me.V.btnDelete.setDisabled(false);
          me.V.btnStaDelete.setDisabled(false);
        }
      }
    });
  },

  updateData : function () {
    var me = this;
    this.V.sysErrorsGrid.getStore().load({callback: function () { this.sort('id', 'DESC'); me.countNotAckErrors(me); }});

    this.V.sysErrorsStatisticGrid.getStore().load();
  },

  deleteErrors : function () {
    var me = this;
    Ext.Ajax.request({ url: '/BS350/diagnosis/delErrors', success: function (res) { me.updateData(); } });
  },

  acknowledgeErrors: function () {
    var me = this;
    Ext.Ajax.request({ url: '/BS350/diagnosis/ackErrors', success: function (res) { me.updateData(); } });
  }


});

