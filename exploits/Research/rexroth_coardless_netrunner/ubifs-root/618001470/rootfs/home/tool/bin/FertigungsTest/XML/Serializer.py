# -*- coding: cp1252 -*-
'''
Created on 13.11.2011

@author: sth2mt
'''

class Serializer(object):
    '''
    classdocs
    '''


    def __init__(self):
        '''
        Constructor
        '''
        self.XmlTag = ["tag","name","type","unit","info","wert","function","param",None]
        
    def __del__(self):
         
        '''
        Destructor
        '''
        pass
    
    def start(self):
        #print "XML::Serializer::Start"
        pass
    
    def VerketteXML(self,tag,id,name,type,unit,info,wert,function,param,liste):
        self.XmlTag = [tag,id,name,type,unit,info,wert,function,param,liste]
        
        return self.XmlTag
        pass
    def BuildTag(self,liste):
        string = "<%s" % liste[0]
        if liste[1] != None:
            string+= " id=\""+liste[1]+"\""
        if liste[2] != None:
            string+= " name=\""+liste[2]+"\""
        if liste[3] != None:
            string+= " type=\""+liste[3]+"\""
        if liste[4] != None:
            string+= " unit=\""+liste[4]+"\""
        if liste[5] != None:
            string+= " info=\""+liste[5]+"\""
        string+= ">"
        if liste[6] != None:
            string+= "%s" % liste[6]+"</%s>" % liste[0]
        else:
            if liste[9] != None:
                for i in range(0,len(liste[9]),1):
                    #string+= ("\r\n\t" + self.BuildTag(liste[9][i]))
                    string+= (self.BuildTag(liste[9][i]))
                #string+= "\n\r</%s>"%liste[0]
                string+= "</%s>"%liste[0]
        return string
            
        pass
          