/*global Ext: false, TR: false */
Ext.define('BS350.controller.SDExplorerCtrl',
{
  extend: 'BS350.custom.ViewController',

  views: ['SDExplorerView', 'BS350.custom.UploadCertificateWindow', 'BS350.custom.CertView'],

  items: [
    {name: 'dirPanel', query: '#dirPanel'},
    {name: 'dirData', query: '#dirData', actions: {selectionchange: 'itemselected'}},
    {name: 'noSDMsg', query: '#noSDMsg'},
    {name: 'emptySDMsg', query: '#emptySDMsg'},
    {name: 'btnView', query: '#btnView', actions: {click: 'viewItem'}},
    {name: 'btnDownload', query: '#btnDownload', actions: {click: 'downloadItem'}},
    {name: 'btnUpload', query: '#btnUpload', actions: {click: 'upload'}},
    {name: 'btnRefresh', query: '#btnRefresh', actions: {click: 'refresh'}}

  ],

  currItem: null,
  currPath: null,
  rootPath: null,
  SDMonitoring: false,

  init: function(application) {
  },

  initView: function() {
    this.dirStore = this.V.dirData.getStore();
    this.rootPath = null;
    this.V.btnUpload.setDisabled(true);
    this.V.btnRefresh.setDisabled(true);
    if (this.access !== 'w') {
      this.V.btnUpload.hide();
    }
  },

  setDisabled: function (b) {
    if (this.access !== 'w') {
      return true;
    }
    return b;
  },

  setPath: function(path) {
    this.currPath = path;
    var isRootPath = (path === this.rootPath);
    var fakePath = path.replace(this.rootPath, '');
    this.dirStore.load({
      scope: this,
      params: {node: path, back: !isRootPath},
      callback: function() {
        this.V.dirPanel.setTitle(fakePath);
        if (isRootPath && this.dirStore.count() === 0) {
          // Empty SD card
          this.V.dirPanel.setVisible(false);
          this.V.emptySDMsg.setVisible(true);
        }
        this.view.setLoading(false);
      }
    });
  },

  itemselected: function(dataview, items) {
    if (items.length > 0) {
      this.currItem = items[0];
      this.V.btnView.setDisabled(false);
      this.V.btnDownload.setDisabled(!this.currItem.get('leaf'));
    }
    else {
      this.currItem = null;
      this.V.btnView.setDisabled(true);
      this.V.btnDownload.setDisabled(true);
    }
  },

  viewItem: function(btn) {
    if (this.currItem.get('leaf')) {
      window.open('/BS350/fs/view?f=' + encodeURIComponent(this.currItem.get('id')));
    }
    else {
      this.setPath(this.currItem.get('id'));
    }
  },

  downloadItem: function(btn) {
    window.location.href = '/BS350/fs/download?f=' + encodeURIComponent(this.currItem.get('id'));
  },



  initUploadWin: function (uploadFunc) {
    // Add windows elements
    this.V.uploadForm = this.V.uploadWin.down('#uploadForm');

    this.V.uploadBtn1 = this.V.uploadWin.down('#uploadBtn');
    this.V.cancelBtn1 = this.V.uploadWin.down('#cancelBtn');


    this.V.updateProgress = this.V.uploadWin.down('#updateProgress');
    this.V.progressLabel = this.V.uploadWin.down('#progressLbl');
    this.V.progressBar = this.V.uploadWin.down('#progressBar');

    this.V.uploadBtn1.addListener('click', uploadFunc, this);
    this.V.cancelBtn1.addListener('click', function () { this.V.uploadWin.close(); }, this);
  },

  upload: function () {
    var me = this;
    this.V.uploadWin = Ext.create('BS350.custom.UploadCertificateWindow', {
      title: TR('Upload File')
    });
    this.initUploadWin(function () {this.uploadFile()});
    var fupld = Ext.ComponentQuery.query('#fileupload', this.V.uploadWin)[0];
    fupld.validator = function (value) {
      if (value === undefined) {
      } else {
        if (value.indexOf("'") > -1) {
          return TR("No single quotations allowed in filenames.");
        }
      }
      return true;
    };
    this.V.uploadForm.down('filefield').addListener('validitychange', function(cmp, valid){
      if (valid === true){
        try {
          this.uploadFile();
        }catch(err){}
      }
    }, this);
    this.V.uploadWin.addListener('show', function(){
      try{
        var cmp = this.V.uploadWin.down('form').down('filefield');
        if (!cmp.isVisible()) return;//only when we have it
        if (!Ext.isIE10m) {
          cmp.fileInputEl.dom.click();
        }
      }catch(err){}
    }, this);

    this.V.uploadWin.show();
    this.V.uploadWin.addListener('close', function () {this.updateState = 'start'; }, this);
    this.updateState = 'upload';
  },


  uploadFile: function () {
    var me = this;
    var form = me.V.uploadForm.getForm();
    var valid = form.getFields().getAt(0).validate();
    if (valid) {
      me.V.uploadWin.setLoading(TR("Uploading..."));
      me.V.uploadForm.setVisible(false);
      me.SDMonitoring = false;
      form.submit({
        url: '/BS350/fs/uploadFile',
        params: {trgtPath: me.currPath},
        success: function (form, action) {
          setTimeout(function() {me.SDMonitoring = true; me.checkSD();}, 2000);
          me.setPath(me.currPath);
          me.V.uploadWin.close();
          //me.V.uploadWin.setLoading(false);
        },
        failure: function (form, action) {
          setTimeout(function() {me.SDMonitoring = true; me.checkSD();}, 2000);
          me.V.uploadWin.close();
          me.V.uploadForm.setLoading(false);
          me.updateState = 'start';
          var res = Ext.JSON.decode(action.response.responseText);
          Ext.MessageBox.alert(TR('File not uploaded'), TR(res.msg));
        }
      });
    }
  },


  checkSD: function() {
    var me = this;
    if (!me.SDMonitoring) return;
    Ext.Ajax.request(
      {
        url: '/BS350/fs/sdPathList',
        method: 'GET',
        success: function(res) {
          try{
            var pathList = Ext.JSON.decode(res.responseText);
            if (me.rootPath === null && pathList.length > 0) {
              // Show first partition
              // TODO: Partition selection ??
              me.rootPath = pathList[0];
              me.V.dirPanel.setVisible(true);
              me.V.noSDMsg.setVisible(false);
              me.V.btnUpload.setDisabled(false);
              me.V.btnRefresh.setDisabled(false);
              me.V.emptySDMsg.setVisible(false);
              me.setPath(me.rootPath);
            }
            else if(me.rootPath !== null && pathList.length === 0) {
              me.rootPath = null;
              me.V.dirPanel.setVisible(false);
              me.V.noSDMsg.setVisible(true);
              me.V.btnUpload.setDisabled(true);
              me.V.btnRefresh.setDisabled(true);
              me.V.emptySDMsg.setVisible(false);
            }
          } catch (err) {}
          setTimeout(function() {me.checkSD();}, 2000);
        },
        failure: function(res) {
          setTimeout(function() {me.checkSD();}, 2000);
        }
      }
    );
  },

  activated: function() {
    this.SDMonitoring = true;
    this.checkSD();
  },

  deactivated: function() {
    this.SDMonitoring = false;
  },

  refresh: function () {
    this.view.setLoading(TR("Refreshing..."));
    this.setPath(this.currPath);
  }

});

