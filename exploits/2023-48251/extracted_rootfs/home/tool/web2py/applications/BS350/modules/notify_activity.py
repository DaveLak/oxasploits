import syslog
import traceback
import Activity
import WGDBus
import time
import thread

__author__ = 'frank'

class ActivityLogParams:
    def __init__(self, activityArgs=None, activityType=None):
        if activityType is None:
            syslog.syslog(syslog.LOG_ERR, "needs defined activityType! {0}".format(traceback.format_stack()))
        self.activityArgs = activityArgs
        self.activityType = activityType


def __activityLog(activityArgs, activityType, session):
    syslog.syslog(syslog.LOG_DEBUG, "activity to send for {0} {1}".format(activityArgs, activityType))
    try:
        if activityArgs is None:
            Activity.LOG(session, activityType)
        else:
            Activity.LOG(session, activityType, *activityArgs)
    except:
        syslog.syslog(syslog.LOG_ERR, "not possible to write activity (1): {0}".format(traceback.format_exc()))
        syslog.syslog(syslog.LOG_ERR, "not possible to write activity (2): {0}".format(traceback.format_stack()))


def __configChanged(filename):
    syslog.syslog(syslog.LOG_DEBUG, "about to send configurationChanged for {0}".format(filename))
    try:
        WGDBus.configurationChanged(filename)
    except:
        syslog.syslog(syslog.LOG_ERR, "not possible to send configuration changed msg (1): {0}".format(traceback.format_exc()))
        syslog.syslog(syslog.LOG_ERR, "not possible to send configuration changed msg (2): {0}".format(traceback.format_stack()))


def configChanged(filename, activityType, activityArgs=None, session=None):
    syslog.syslog(
        syslog.LOG_DEBUG,
        "configChanged filename={0}, activityType={1}, activityArgs={2}".format(filename, activityType, activityArgs)
    )
    if filename is None:
        syslog.syslog(syslog.LOG_ERR, "configChanged got no filename {0}".format(traceback.format_stack()))
    if activityType is None:
        syslog.syslog(syslog.LOG_ERR, "configChanged got no activityType {0}".format(traceback.format_stack()))
    if session is None:
        syslog.syslog(syslog.LOG_ERR, "configChanged got no session {0}".format(traceback.format_stack()))

    __activityLog(activityArgs, activityType, session)
    __configChanged(filename)


def configChangedBatch(activities=[], filename=None, session=None):
    if filename is None:
        syslog.syslog(syslog.LOG_ERR, "configChangedBatch got no filename {0}".format(traceback.format_stack()))
    if session is None:
        syslog.syslog(syslog.LOG_ERR, "configChangedBatch got no session {0}".format(traceback.format_stack()))
    for act in activities:
        __activityLog(activityArgs=act.activityArgs, activityType=act.activityType, session=session)

    if len(activities) > 0:
        __configChanged(filename)


def configChangedAsync(filename, activityType, session=None):
    def sendConfigChanged():
        time.sleep(4)
        WGDBus.configurationChanged(filename)

    Activity.LOG(session, activityType)
    thread.start_new_thread(sendConfigChanged, ())
