__author__ = 'frank'


class InitJob:

    def __init__(self):
        self.data = []

    def create(self, idSrc, delIDCode, user, comment, date, display_time, useIdleEn, timeout1, timeout2, display_text1, display_text2):
        self.data.append('c = require "constants"')
        self.data.append('f = require "runFunctions"')
        self.data.append('idsrc = require "idcodesources"')
        self.data.append(' ')
        self.data.append('local initNode = {')
        self.data.append('   name = "initNode",')
        self.data.append('   timeout = 300,')
        self.data.append('   type = c.TypeIdleStartNode,')
        self.data.append('   selectsCw = 0,')
        self.data.append('   selectsEn = 0,')
        self.data.append('   displayJobSteps = 0,')
        self.data.append('   displayTime = %s,' % display_time)
        self.data.append('   clearIDCode = 0,')
        self.data.append('   jobComment = \'%s\',' % comment)
        self.data.append('   jobUser = \'%s\',' % user)
        self.data.append('   jobDate = %d,' % date)
        self.data.append('   useIdleEn = %d,' % useIdleEn)
        self.data.append('   idcode_timeout1 = %d,' % timeout1)
        self.data.append('   idcode_timeout2 = %d,' % timeout2)
        self.data.append('   display_text1 = "%s",' % display_text1)
        self.data.append('   display_text2 = "%s"'  % display_text2)
        self.data.append('}')
        self.data.append(' ')
        self.data.append('-- Atoms for Idle Script ---')
        self.data.append('atoms  = {}')
        self.data.append(' ')
        self.data.append('-- Lokaler Knoten --')
        self.data.append('atoms["$Local"] = {')
        self.data.append('   type = c.TypeDevice, ')
        self.data.append('   mode = c.DeviceModeLocal,')
        self.data.append('   dest = "0"')
        self.data.append('}')
        self.data.append(' ')
        self.data.append('atoms["$AutoRun"] = {')
        self.data.append('   type = c.TypeTriggerOut,		-- TriggerOut --')
        self.data.append('   mode = c.TriggerOutModeAutoRun, 		-- AutoRun setzen --')
        self.data.append('   dest = 0,')
        self.data.append('   state = 0,				-- Falls AutoRun hier eine 1 eintragen --')
        self.data.append('   range = 0,')
        self.data.append('   valueList = {}')
        self.data.append('}')
        self.data.append(' ')
        self.data.append('atoms["$IdCodeSrc"] = {')
        self.data.append('   text ="",')
        self.data.append('   type = c.TypeTriggerOut,		-- TriggerOut')
        self.data.append('   mode = c.TriggerOutIdCodeSrc,	-- Warten auf Job Cw --')
        self.data.append('   dest  = idsrc.%s,' % idSrc)
        self.data.append('   state = %s,' % delIDCode)
        self.data.append('   range = 0,')
        self.data.append('   valueList = {} ')
        self.data.append('}')
        self.data.append(' ')
        self.data.append('atoms["$RefreshRequest"] = {')
        self.data.append('   type = c.TypeTriggerOut,		-- TriggerOut --')
        self.data.append('   mode = c.TriggerOutModeRefresh, 		-- Refresh aufrufen --')
        self.data.append('   dest = 0,')
        self.data.append('   state = 0,')
        self.data.append('   range = 0,')
        self.data.append('   valueList = {}')
        self.data.append('}')
        self.data.append(' ')
        self.data.append('atoms["$RefreshFinished"] = {')
        self.data.append('   type = c.TypeTriggerIn,		-- TriggerIn --')
        self.data.append('   mode = c.TriggerInModeRefreshDone, 	-- Refresh fertig --')
        self.data.append('   dest = 0,')
        self.data.append('   state = 0,')
        self.data.append('   range = 0')
        self.data.append('}')
        self.data.append(' ')
        self.data.append('f.publishAtoms(atoms,function (a) cpp.job:addAtom(a) end)')
        self.data.append(' ')
        self.data.append(' ')
        self.data.append('nodes = {}')
        self.data.append('nodes[1] = {}')
        self.data.append('nodes[2] = {}')
        self.data.append('nodes[3] = {}')
        self.data.append('nodes[4] = {}')
        self.data.append('nodes[5] = {}')
        self.data.append(' ')
        self.data.append('nodes[1].atom = atoms["$Local"]')
        self.data.append('nodes[1].successor = {{var = "dummy",val = nil, next = nodes[2] }}')
        self.data.append(' ')
        self.data.append('nodes[2].atom = atoms["$AutoRun"]')
        self.data.append('nodes[2].successor = {{var = "dummy",val = nil, next = nodes[3] }}')
        self.data.append(' ')
        self.data.append('nodes[3].atom = atoms["$IdCodeSrc"]')
        self.data.append('nodes[3].successor = {{var = "dummy",val = nil, next = f.EndNode }}')
        self.data.append(' ')
        self.data.append('nodes[4].atom = atoms["$RefreshRequest"]')
        self.data.append('nodes[4].successor = {{var = "dummy",val = nil, next = nodes[5] }}')
        self.data.append(' ')
        self.data.append('nodes[5].atom = atoms["$RefreshFinished"]')
        self.data.append('nodes[5].successor = {{var = "dummy",val = nil, next = f.EndNode }}')
        self.data.append(' ')
        self.data.append(' ')
        self.data.append('--Eigentlicher Start Code--')
        self.data.append('f.setInitNode(initNode)')
        self.data.append('f.checkPlausib(nodes)')
        self.data.append('f.go(nodes[2])')
        self.data.append('f.cleanUpNodes(atoms, nodes)')

        return self.data
