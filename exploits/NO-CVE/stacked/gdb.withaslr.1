Quit anyway? (y or n) n
Not confirmed.
(gdb) disas main
Dump of assembler code for function main:
   0x00005555555551a9 <+0>:     endbr64
   0x00005555555551ad <+4>:     push   %rbp
   0x00005555555551ae <+5>:     mov    %rsp,%rbp
   0x00005555555551b1 <+8>:     sub    $0x20,%rsp
   0x00005555555551b5 <+12>:    mov    %fs:0x28,%rax
   0x00005555555551be <+21>:    mov    %rax,-0x8(%rbp)
   0x00005555555551c2 <+25>:    xor    %eax,%eax
   0x00005555555551c4 <+27>:    movl   $0x0,-0x1c(%rbp)
   0x00005555555551cb <+34>:    lea    0xe36(%rip),%rax        # 0x555555556008
   0x00005555555551d2 <+41>:    mov    %rax,%rdi
   0x00005555555551d5 <+44>:    call   0x555555555080 <puts@plt>
   0x00005555555551da <+49>:    lea    -0x17(%rbp),%rax
   0x00005555555551de <+53>:    mov    %rax,%rdi
   0x00005555555551e1 <+56>:    mov    $0x0,%eax
   0x00005555555551e6 <+61>:    call   0x5555555550b0 <gets@plt>
   0x00005555555551eb <+66>:    lea    -0x17(%rbp),%rax
   0x00005555555551ef <+70>:    lea    0xe2a(%rip),%rdx        # 0x555555556020
   0x00005555555551f6 <+77>:    mov    %rdx,%rsi
   0x00005555555551f9 <+80>:    mov    %rax,%rdi
   0x00005555555551fc <+83>:    call   0x5555555550a0 <strcmp@plt>
   0x0000555555555201 <+88>:    test   %eax,%eax
   0x0000555555555203 <+90>:    je     0x555555555216 <main+109>
   0x0000555555555205 <+92>:    lea    0xe21(%rip),%rax        # 0x55555555602d
   0x000055555555520c <+99>:    mov    %rax,%rdi
   0x000055555555520f <+102>:   call   0x555555555080 <puts@plt>
   0x0000555555555214 <+107>:   jmp    0x55555555522c <main+131>
   0x0000555555555216 <+109>:   lea    0xe22(%rip),%rax        # 0x55555555603f
   0x000055555555521d <+116>:   mov    %rax,%rdi
   0x0000555555555220 <+119>:   call   0x555555555080 <puts@plt>
   0x0000555555555225 <+124>:   movl   $0x1,-0x1c(%rbp)
   0x000055555555522c <+131>:   cmpl   $0x0,-0x1c(%rbp)
   0x0000555555555230 <+135>:   je     0x555555555241 <main+152>
   0x0000555555555232 <+137>:   lea    0xe1f(%rip),%rax        # 0x555555556058
   0x0000555555555239 <+144>:   mov    %rax,%rdi
   0x000055555555523c <+147>:   call   0x555555555080 <puts@plt>
   0x0000555555555241 <+152>:   mov    $0x0,%eax
   0x0000555555555246 <+157>:   mov    -0x8(%rbp),%rdx
   0x000055555555524a <+161>:   sub    %fs:0x28,%rdx
   0x0000555555555253 <+170>:   je     0x55555555525a <main+177>
   0x0000555555555255 <+172>:   call   0x555555555090 <__stack_chk_fail@plt>
   0x000055555555525a <+177>:   leave
   0x000055555555525b <+178>:   ret
End of assembler dump.
(gdb) info reg
rax            0xfffffffffffffe00  -512
rbx            0x7ffff7f96aa0      140737353706144
rcx            0x7ffff7e91992      140737352636818
rdx            0x400               1024
rsi            0x5555555596b0      93824992253616
rdi            0x0                 0
rbp            0x7ffff7f93600      0x7ffff7f93600 <_IO_file_jumps>
rsp            0x7fffffffd658      0x7fffffffd658
r8             0x0                 0
r9             0x5555555596b0      93824992253616
r10            0x77                119
r11            0x246               582
r12            0x7ffff7f97780      140737353709440
r13            0xd68               3432
r14            0x7ffff7f92a00      140737353689600
r15            0xd68               3432
rip            0x7ffff7e91992      0x7ffff7e91992 <__GI___libc_read+18>
eflags         0x246               [ PF ZF IF ]
cs             0x33                51
ss             0x2b                43
ds             0x0                 0
es             0x0                 0
fs             0x0                 0
gs             0x0                 0
(gdb)
